services:
  postgres:
    image: postgres:15
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file: .env
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs

    develop:
      watch:
        - action: sync+restart
          path: "./src"
          target: /app
          ignore:
              - "**/__pycache__/**"
              - "**/*.pyc"
              - "**/*.pyo"
              - "**/*.py~"
              - "Dockerfile"
              - "docker-compose.yml"

        - action: sync+restart
          path: "./main.py"
          target: "/app/main.py"

        - action: rebuild
          path: "requirements.txt"
          target: /app

volumes:
  postgres_data:
